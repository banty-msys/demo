{"version":3,"sources":["components/Home/index.js","components/ActivePosition/Position.js","components/ActivePosition/index.js","components/Svg/index.js","components/Images/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","react_router_dom","to","React","Component","Position","_this","scrollPosition","windowTop","window","pageYOffset","containerDiv","scrollTop","sectionTop","offsetTop","setState","active","state","addEventListener","removeEventListener","_this2","concat","ref","div","ActivePosition","Fragment","ActivePosition_Position","Svg","version","xmlns","viewBox","d","Images","images","map","item","index","key","src","App","react_router","path","component","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7d51161e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './style.css'\r\n\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"home\">\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/active-position\">Active Position</Link>\r\n                        <Link to=\"/svg\">SVG</Link>\r\n                        <Link to=\"/images\">Images</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nclass Position extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            windowTop: 0,\r\n            sectionTop: 0,\r\n            active: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.scrollPosition()\r\n        window.addEventListener('scroll', this.scrollPosition)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.scrollPosition)\r\n    }\r\n\r\n    scrollPosition = () => {\r\n        const windowTop = window.pageYOffset || this.containerDiv.scrollTop\r\n        const sectionTop = this.containerDiv.offsetTop\r\n\r\n        this.setState(() => ({\r\n            windowTop,\r\n            sectionTop,\r\n            active: (windowTop > sectionTop)\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        const { active } = this.state\r\n        return(\r\n            <div className={`div ${active ? 'active' : ''}`} ref={(div) => { this.containerDiv = div }}>\r\n                1\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Position","import React from 'react'\r\nimport Position from './Position'\r\nimport './style.css'\r\n\r\nclass ActivePosition extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Position />\r\n                <Position />\r\n                <Position />\r\n                <Position />\r\n                <Position />\r\n                <Position />\r\n                <Position />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActivePosition","import React from 'react'\r\nimport './style.css'\r\n\r\nclass Svg extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"svg\">\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 300\">\r\n                    <path className=\"diamondSt pathTulip\" d=\"M400,280l-90-130l90-130l90,130L400,280z\"/>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Svg","import React from 'react'\r\nimport './style.css'\r\n\r\nclass Images extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            images: [\"/static/images/1.jpg\",\"/static/images/2.jpg\",\"/static/images/3.jpg\",\"/static/images/4.jpg\",\"/static/images/5.jpg\",\"/static/images/6.jpg\",\"/static/images/7.jpg\"]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { images } = this.state\r\n        return(\r\n            <div className=\"images\">\r\n                { images.map((item, index) => <img key={index} src={item} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Images","import React from 'react'\nimport { Switch, BrowserRouter, Route } from 'react-router-dom'\n\nimport Home from './components/Home/index'\nimport ActivePosition from './components/ActivePosition/index'\nimport Svg from './components/Svg/index'\nimport Images from './components/Images/index'\n\nconst App = () => {\n  return (\n    <BrowserRouter>       \n      <Switch>\n        <Route path=\"/\" component={Home} exact={true} />\n        <Route path=\"/active-position\" component={ActivePosition} exact={true} />\n        <Route path=\"/svg\" component={Svg} exact={true} />\n        <Route path=\"/images\" component={Images} exact={true} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  console.log('sw register')\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  console.log('sw unregister')\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker.register({\n    onUpdate: () => {\n        console.log('Updated.');\n    }\n})\n"],"sourceRoot":""}